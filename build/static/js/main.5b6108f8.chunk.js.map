{"version":3,"sources":["layout/ColorModeSwitcher.tsx","layout/Navbar.tsx","layout/Layout.tsx","pages/Home.tsx","pages/Tracker.tsx","App.tsx","index.tsx"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","aria-label","Navbar","useState","isOpen","setIsOpen","bg","toggle","MenuToggle","display","base","md","boxSize","Logo","href","direction","fontWeight","MenuItem","children","to","MenuLinks","flexBasis","spacing","align","justify","pt","justifySelf","NavBarContainer","as","pos","wrap","w","p","Layout","bgColor","minH","mt","mb","mx","Home","h","alignItems","justifyContent","Tracker","App","exact","path","component","ReactDOM","render","theme","document","getElementById"],"mappings":"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","file":"static/js/main.5b6108f8.chunk.js","sourcesContent":["import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n","import React, { FC, useState } from \"react\";\r\nimport { Box, Text, Link, Flex, Stack, useColorModeValue } from \"@chakra-ui/react\";\r\nimport { VscClose, VscMenu } from \"react-icons/vsc\";\r\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\r\n\r\ninterface MenuItemProps {\r\n  children: string;\r\n  to: string;\r\n}\r\n\r\ninterface MenuToggleProps {\r\n  toggle: () => void;\r\n  isOpen: boolean;\r\n}\r\n\r\ninterface MenuLinksProps {\r\n  isOpen: boolean;\r\n}\r\n\r\nconst Navbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const bg = useColorModeValue(\"gray.100\", \"gray.900\");\r\n  const color = useColorModeValue(\"black\", \"white\");\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const MenuToggle = (props: MenuToggleProps) => {\r\n    return (\r\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={toggle} boxSize={35}>\r\n        {isOpen ? <VscClose size={35} /> : <VscMenu size={35} />}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const Logo = () => {\r\n    return (\r\n      <Link href=\"/\">\r\n        <Stack direction=\"row\">\r\n          <Text fontSize=\"3xl\" fontWeight=\"bold\">\r\n            D2 Bounty Tracker\r\n          </Text>\r\n        </Stack>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  const MenuItem = ({ children, to }: MenuItemProps) => {\r\n    return (\r\n      <Link href={to}>\r\n        <Text display=\"block\">{children}</Text>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  const MenuLinks = (props: MenuLinksProps) => {\r\n    return (\r\n      <Box display={{ base: isOpen ? \"block\" : \"none\", md: \"block\" }} flexBasis={{ base: \"100%\", md: \"auto\" }}>\r\n        <Stack\r\n          spacing={8}\r\n          align=\"center\"\r\n          justify={[\"center\", \"center\", \"flex-end\", \"flex-end\"]}\r\n          direction={[\"column\", \"column\", \"row\", \"row\"]}\r\n          pt={[4, 4, 0, 0]}\r\n        >\r\n          <MenuItem to=\"https://www.bungie.net/en/OAuth/Authorize?client_id=34710&response_type=code\">Login</MenuItem>\r\n          <ColorModeSwitcher justifySelf=\"flex-end\" />\r\n        </Stack>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const NavBarContainer: FC = ({ children }) => {\r\n    return (\r\n      <Flex\r\n        as=\"nav\"\r\n        pos=\"fixed\"\r\n        align=\"center\"\r\n        justify=\"space-between\"\r\n        wrap=\"wrap\"\r\n        w=\"100%\"\r\n        p={4}\r\n        bg={bg}\r\n        color={color}\r\n      >\r\n        {children}\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <NavBarContainer>\r\n      <Logo />\r\n      <MenuToggle toggle={toggle} isOpen={isOpen} />\r\n      <MenuLinks isOpen={isOpen} />\r\n    </NavBarContainer>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { FC } from \"react\";\r\nimport { Box, Grid } from \"@chakra-ui/react\";\r\n\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst Layout: FC = ({ children }) => {\r\n  return (\r\n    <Box bgColor=\"gray.800\">\r\n      <Navbar />\r\n      <Grid minH=\"100vh\">\r\n        <Box mt={24} mb={5} mx={5}>\r\n          {children}\r\n        </Box>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Box, Flex, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Flex h=\"full\" alignItems=\"center\" justifyContent=\"center\">\r\n      <Box color=\"white\">\r\n        <Text>{\"Home :)\"}</Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Box, Flex, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst Tracker = () => {\r\n  return (\r\n    <Flex h=\"full\" alignItems=\"center\" justifyContent=\"center\">\r\n      <Box color=\"white\">\r\n        <Text>{\"Tracker :)\"}</Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Tracker;\r\n","import * as React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Layout from \"./layout/Layout\";\nimport Home from \"./pages/Home\";\nimport Tracker from \"./pages/Tracker\";\n\nexport const App = () => (\n  <BrowserRouter>\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/Tracker\" component={Tracker} />\n      </Switch>\n    </Layout>\n  </BrowserRouter>\n);\n","import { ChakraProvider, ColorModeScript, theme } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <ColorModeScript />\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}